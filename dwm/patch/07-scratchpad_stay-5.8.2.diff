diff -up dwm-5.8.2/dwm.c dwm-5.8.2-scratchpad/dwm.c
--- dwm-5.8.2/dwm.c	2011-03-07 03:14:18.814185556 +0000
+++ dwm-5.8.2-scratchpad/dwm.c	2011-03-07 03:22:24.516075923 +0000
@@ -248,6 +248,7 @@ static int textnw(const char *text, unsi
 static void ntile(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
+static void togglespad(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, Bool setfocus);
@@ -303,6 +304,8 @@ static Window root;
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
+static unsigned int spadtag = 1 << LENGTH(tags); /* This tag specially for you, Scratchpad. */
+
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };
 
@@ -1191,6 +1194,15 @@ manage(Window w, XWindowAttributes *wa)
 		           && (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
 		c->bw = borderpx;
 	}
+  if(strcmp(c->name, spadname) == 0) {
+    c->tags = spadtag;
+    c->isfloating = True;
+    c->x = (c->mon->mw - c->w) / 2;
+    c->y = (c->mon->mh - c->h) / 2;
+    c->mon->tagset[c->mon->seltags] |= c->tags;
+  } else { /* make sure non-scratchpads stay out of scratchpadtag */
+    c->tags &= TAGMASK;
+  }
 	wc.border_width = c->bw;
 	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, dc.colors[0][ColBorder]);
@@ -1771,6 +1783,25 @@ togglefloating(const Arg *arg) {
 }
 
 void
+togglespad(const Arg *arg) {
+  Client *c = NULL;
+  unsigned int found = 0;
+  /* check if a scratchpad is already there in scratchpadtag */
+  for(c = selmon->clients; c && !(found = c->tags & spadtag); c = c->next);
+  if(!found) { /* not found: launch it and put it in its tag (see manage()) */
+    spawn(arg);
+    return;
+  }
+  unsigned int newtagset = selmon->tagset[selmon->seltags] ^ spadtag;
+  if(newtagset) {
+    selmon->tagset[selmon->seltags] = newtagset;
+    arrange(selmon);
+  }
+  focus(c);
+}
+
+
+void
 toggletag(const Arg *arg) {
 	unsigned int newtags;
 	unsigned int i;
@@ -2059,8 +2090,9 @@ updatewmhints(Client *c) {
 void
 view(const Arg *arg) {
 	unsigned int i;
+  unsigned int stag = selmon->tagset[selmon->seltags] & spadtag;
 
-	if((arg->ui & TAGMASK) == selmon->tagset[selmon->seltags])
+	if((arg->ui & TAGMASK) == (selmon->tagset[selmon->seltags] & TAGMASK))
 		return;
 	selmon->seltags ^= 1; /* toggle sel tagset */
 	if(arg->ui & TAGMASK) {
@@ -2077,6 +2109,7 @@ view(const Arg *arg) {
 		selmon->curtag^= selmon->prevtag;
 		selmon->prevtag= selmon->curtag ^ selmon->prevtag;
 	}
+  selmon->tagset[selmon->seltags] |= stag;
 	selmon->lt[selmon->sellt] = selmon->lts[selmon->curtag];
 	arrange(selmon);
 }
